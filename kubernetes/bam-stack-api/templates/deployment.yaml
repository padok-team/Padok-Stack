### deployment level ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bam-stack-api.fullname" . }}
  labels:
{{ include "bam-stack-api.labels" . | indent 4 }}
spec:
  ### replicaset level ###
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.bam-stack-api.io/name: {{ include "bam-stack-api.fullname" . }}
      app.bam-stack-api.io/instance: {{ .Release.Name }}
  template:
    ### pod level ###
    # As always with replication, the pod's labels need to match replicaset selector
    metadata:
      labels:
        app.bam-stack-api.io/name: {{ include "bam-stack-api.fullname" . }}
        app.bam-stack-api.io/instance: {{ .Release.Name }}
    spec:
      containers:
      # Here we describe the structure of the containers of the pod.
      # In this case, only one container id needed:
      #  - image
      #  - volumes
      #     - config
      #     - secrets -> configMap for now...
      #  - ports
      #  - env vars -> None
      #  - imagePullPolicy
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          env:
#           -
          volumeMounts:
           - name: vol-config
             mountPath: "/opt/app/config/default.yaml"
             subPath: parameters.yml.dist
           - name: vol-firebase
             mountPath: "/opt/app/config/firebase-adminsdk.json"
             subPath: firebase-key
          ports:
           - name: node-port
             containerPort: 3000
             protocol: TCP
        - image: gcr.io/cloudsql-docker/gce-proxy:1.11
          name: cloudsql-proxy
          command:
           - "/cloud_sql_proxy"
           - "-instances={{ .Values.db.address }}=tcp:5432"
           - "-credential_file=/secrets/cloudsql/postgres-admin-key.json"
          securityContext:
            runAsUser: 0
            allowPriviledgeEscalation: false
          volumeMounts:
           - name: vol-proxy
             mountPath: "/secrets/cloudsql/postgres-admin-key.json"
             subPath: postgres-admin-key.json
      volumes:
       - name: vol-firebase
         secret:
           secretName: firebase
       - name: vol-proxy
         secret:
           secretName: sql-proxy
       - name: vol-config
         configMap:
           name: {{ include "bam-stack-api.fullname" . }}
